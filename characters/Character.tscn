[gd_scene load_steps=7 format=2]

[ext_resource path="res://characters/enemies/assets/red_16x16.png" type="Texture" id=1]
[ext_resource path="res://characters/Character.gd" type="Script" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

signal health_changed(health, source_body)
export var max_health = 3

var health = 0
var status = null

enum STATUSES {NONE, INVICIBLE}

func _ready() -> void:
	status = STATUSES.NONE
	health = max_health
	
func take_damage(amount, source):
	if status == STATUSES.INVICIBLE:
		return
		
	health -= amount	
	if health < 0:
		health = 0
	
	get_parent().knock_back(source.position)
	
	status = STATUSES.INVICIBLE	
	$InvicibilityTimer.start(-1)
	get_parent().get_node(\"AnimationPlayer\").play(\"damaged\")
	emit_signal(\"health_changed\", health)

func heal(amount):
	health += amount
	if health > max_health:
		health = max_health	
	emit_signal(\"health_changed\", health)


func _on_InvicibilityTimer_timeout() -> void:
	status = STATUSES.NONE
"

[sub_resource type="Animation" id=2]
resource_name = "Arrow"
length = 0.001

[sub_resource type="Animation" id=3]
resource_name = "damaged"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 0.307786, 3.03143, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 0.560784, 0.658824, 0.215686, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 8, 7.86579 )

[node name="Character" type="KinematicBody2D"]
script = ExtResource( 3 )

[node name="Health" type="Node" parent="."]
script = SubResource( 1 )

[node name="InvicibilityTimer" type="Timer" parent="Health"]
one_shot = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Arrow = SubResource( 2 )
anims/damaged = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )
[connection signal="health_changed" from="Health" to="." method="_on_Health_health_changed"]
[connection signal="timeout" from="Health/InvicibilityTimer" to="Health" method="_on_InvicibilityTimer_timeout"]
