[gd_scene load_steps=10 format=2]

[ext_resource path="res://characters/player/Player.gd" type="Script" id=1]
[ext_resource path="res://characters/assets/arrow16x16.png" type="Texture" id=2]
[ext_resource path="res://characters/Character.tscn" type="PackedScene" id=3]
[ext_resource path="res://characters/player/assets/blue_16x16.png" type="Texture" id=4]
[ext_resource path="res://characters/player/assets/dummy_sword-Sheet.png" type="Texture" id=5]
[ext_resource path="res://characters/player/Sword.gd" type="Script" id=6]

[sub_resource type="Animation" id=1]
resource_name = "idle"

[sub_resource type="GDScript" id=2]
script/source = "extends Sprite


# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta: float) -> void:
#	pass
"

[sub_resource type="Animation" id=3]
resource_name = "attack"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( -0.00161163, 0.0576346, 0.106062, 0.152879, 0.199695, 0.248123, 0.297356, 0.363512, 0.428862 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HitBox/CollisionPolygon2D:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( -0.000805817, 0.0596303, 0.106368, 0.153105, 0.199842, 0.250609, 0.297346, 0.36584, 0.427082 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 44.0737, 93.1003, 116.969, 139.378, 157.462, 172.961, 250.405, 271.804 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("HitBox/CollisionPolygon2D:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( -1.33878e-09, 0.0596303, 0.107173, 0.152299, 0.200648, 0.250609, 0.297346, 0.366646, 0.427082 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 4, -4 ), Vector2( 8, -6 ), Vector2( 18, -12 ), Vector2( 19, -10 ), Vector2( 20, -7 ), Vector2( 19, -2 ), Vector2( 19, 2 ), Vector2( 10, 12 ), Vector2( 8, 10 ) ]
}

[node name="Player" instance=ExtResource( 3 )]
script = ExtResource( 1 )
FRICTION = 0.2
ACCELERATION = 0.15
DASH_ENABLED = false

[node name="AnimationPlayer" parent="." index="1"]
anims/idle = SubResource( 1 )

[node name="Sprite" parent="." index="2"]
texture = ExtResource( 4 )
script = SubResource( 2 )

[node name="ArrowIndicator" type="Position2D" parent="." index="4"]

[node name="Sprite" type="Sprite" parent="ArrowIndicator" index="0"]
position = Vector2( 8, 0 )
texture = ExtResource( 2 )

[node name="Sword" type="Position2D" parent="." index="5"]
script = ExtResource( 6 )

[node name="HitBox" type="Area2D" parent="Sword" index="0"]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Sword/HitBox" index="0"]
position = Vector2( 4, -4 )
rotation = 0.0102564
scale = Vector2( 1.02083, 0.9375 )
polygon = PoolVector2Array( 9.79592, 6.4, 2.75234, -6.49754, 3.63895, -9.72953, 10.6777, -3.5677, 13.8308, 3.79456 )

[node name="Sprite" type="Sprite" parent="Sword" index="1"]
position = Vector2( 14, -1 )
scale = Vector2( 1.66667, 1.25 )
texture = ExtResource( 5 )
hframes = 10
frame = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sword" index="2"]
anims/attack = SubResource( 3 )
[connection signal="animation_finished" from="AnimationPlayer" to="Sword" method="_on_AnimationPlayer_animation_finished"]
[connection signal="hit" from="Sword" to="." method="_on_Sword_hit"]
[connection signal="animation_finished" from="Sword/AnimationPlayer" to="Sword" method="_on_AnimationPlayer_animation_finished"]
